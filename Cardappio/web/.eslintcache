[{"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\index.tsx":"1","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Comandas\\Comandas.tsx":"2","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Login\\styles.ts":"3","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\services\\api.ts":"4","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Cardapio\\style.ts":"5","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Cadastro\\Cadastro.tsx":"6","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\App.tsx":"7","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Inicio\\Inicio.tsx":"8","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Usuarios\\Usuarios.tsx":"9","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\components\\SubAside\\style.ts":"10","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\components\\Text\\text.ts":"11","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\components\\Button\\Button.tsx":"12","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\utils\\dimensions.ts":"13","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\components\\Container\\style.ts":"14","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\components\\Button\\style.ts":"15","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\components\\Loader\\style.ts":"16","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Cardapio\\Cardapio.tsx":"17"},{"size":211,"mtime":1615489440464,"results":"18","hashOfConfig":"19"},{"size":5438,"mtime":1619653540009,"results":"20","hashOfConfig":"19"},{"size":1307,"mtime":1616559281269,"results":"21","hashOfConfig":"19"},{"size":125,"mtime":1617070388689,"results":"22","hashOfConfig":"19"},{"size":664,"mtime":1619653540009,"results":"23","hashOfConfig":"19"},{"size":5761,"mtime":1619653540007,"results":"24","hashOfConfig":"19"},{"size":168,"mtime":1615489440453,"results":"25","hashOfConfig":"19"},{"size":810,"mtime":1619653540011,"results":"26","hashOfConfig":"19"},{"size":822,"mtime":1619653540013,"results":"27","hashOfConfig":"19"},{"size":4468,"mtime":1619653540005,"results":"28","hashOfConfig":"19"},{"size":2242,"mtime":1619653540006,"results":"29","hashOfConfig":"19"},{"size":493,"mtime":1619653539994,"results":"30","hashOfConfig":"19"},{"size":993,"mtime":1615603630056,"results":"31","hashOfConfig":"19"},{"size":1382,"mtime":1619653539998,"results":"32","hashOfConfig":"19"},{"size":1549,"mtime":1616559281253,"results":"33","hashOfConfig":"19"},{"size":3112,"mtime":1619653540001,"results":"34","hashOfConfig":"19"},{"size":13229,"mtime":1619664198616,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1qslc7i",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\index.tsx",[],["75","76"],"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Comandas\\Comandas.tsx",["77","78"],"import { useState, useEffect } from 'react'\r\nimport Aside from '../../components/Aside/Aside'\r\nimport SubAside from '../../components/SubAside/SubAside'\r\nimport Container from '../../components/Container/Container'\r\nimport { Grid } from '../../components/Grid/style'\r\nimport { Title, P } from '../../components/Text/text'\r\nimport { Linha } from '../../components/Linha/style'\r\nimport CardsCommand from '../../components/CardsCommand/index'\r\n\r\nimport Button from '../../components/Button/Button'\r\n\r\n\r\nimport { TableWithTabs, Body, TabsContainer } from './style'\r\n\r\nimport { LiMenu } from '../../components/SubAside/style'\r\n\r\nimport { ClipboardOutline} from 'react-ionicons'\r\n\r\ninterface IMesas {\r\n  name: string,\r\n  id: number\r\n}\r\n\r\ninterface IItems {\r\n  name: string,\r\n  id: number,\r\n  desc: string,\r\n  price: string,\r\n}\r\n\r\n\r\nfunction Comandas() {\r\n  const [tables, setTables] = useState<IMesas[]>([])\r\n  const [items, setItems] = useState<IItems[]>([])\r\n  const [countItems, setCountItems] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const mesas: IMesas[] = [\r\n      {\r\n        id: 0,\r\n        name: \"Comanda 1\"\r\n      },\r\n      {\r\n        id: 1,\r\n        name: \"Comanda 2\"\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Comanda 3\"\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"Comanda 4\"\r\n      },\r\n    ]\r\n\r\n    const itens: IItems[] = [\r\n      {\r\n        id: 0,\r\n        name: \"Batata Frita\",\r\n        price: \"R$ 20,00\",\r\n        desc: \"batata frita, cheddar e bacon\",\r\n      },\r\n      {\r\n        id: 1,\r\n        name: \"Batata Frita\",\r\n        price: \"R$ 20,00\",\r\n        desc: \"batata frita, cheddar e bacon\",\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Batata Frita\",\r\n        price: \"R$ 20,00\",\r\n        desc: \"batata frita, cheddar e bacon\",\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"Batata Frita\",\r\n        price: \"R$ 20,00\",\r\n        desc: \"batata frita, cheddar e bacon\",\r\n      },\r\n      {\r\n        id: 4,\r\n        name: \"Batata Frita\",\r\n        price: \"R$ 20,00\",\r\n        desc: \"batata frita, cheddar e bacon\",\r\n      },\r\n      {\r\n        id: 5,\r\n        name: \"Batata Frita\",\r\n        price: \"R$ 20,00\",\r\n        desc: \"batata frita, cheddar e bacon\",\r\n      },\r\n      {\r\n        id: 6,\r\n        name: \"Batata Frita\",\r\n        price: \"R$ 20,00\",\r\n        desc: \"batata frita, cheddar e bacon\",\r\n      },\r\n      {\r\n        id: 7,\r\n        name: \"Batata Frita\",\r\n        price: \"R$ 20,00\",\r\n        desc: \"batata frita, cheddar e bacon\",\r\n      },\r\n    ]\r\n\r\n    setCountItems(mesas.length)\r\n    setItems(itens)\r\n    setTables(mesas)\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <Grid>\r\n      <Aside />\r\n      <SubAside\r\n        items={tables}\r\n        title=\"Gerenciamento de Comandas\"\r\n        addButtonText=\"+ Adicionar nova comanda\"\r\n      >\r\n        {tables.map(table => (\r\n          <div key={table.id}>\r\n            <LiMenu>\r\n              <ClipboardOutline\r\n                color=\"#B2DA5A\"\r\n                width=\"3rem\" height=\"1.5rem\"\r\n              />\r\n              {table.name}\r\n            </LiMenu>\r\n          </div>\r\n        ))}\r\n      </SubAside>\r\n      <Container display=\"flex\" justifyContent=\"flex-end\" padding=\"110px 6px 0px 55px\">\r\n        <Body>\r\n          <TableWithTabs>\r\n            <div style={{ overflow: \"scroll\" }}>\r\n              <div style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                width: \"100%\",\r\n                height: \"fit-content\",\r\n                padding: \"5px\",\r\n              }}>\r\n                <Title\r\n                  color=\"#B2DA5A\"\r\n                  fontSizeResponsive=\"24px\"\r\n                  fontWeight=\"400\"\r\n                >\r\n                  Deseja finalizar a comanda ?\r\n              </Title>\r\n                <Button\r\n                  content=\"Fechar comanda\"\r\n                  width=\"20%\"\r\n                  height=\"40px\"\r\n                  heightResponsive=\"40px\"\r\n                  margin=\"0 0 0 24px\"\r\n                />\r\n              </div>\r\n\r\n              <div style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                width: \"100%\",\r\n                height: \"fit-content\",\r\n                padding: \"5px\",\r\n                marginTop: \"36px\"\r\n              }}>\r\n                <P color=\"#B2DA5A\" fontSizeResponsive=\"18px\" fontWeight=\"bold\">Total: </P>\r\n                <P\r\n                  marginLeft=\"14px\"\r\n                  color=\"#B2DA5A\"\r\n                  fontSizeResponsive=\"18px\"\r\n                  fontWeight=\"bold\"\r\n                >\r\n                  R$ 120,00\r\n              </P>\r\n              </div>\r\n\r\n              <Linha />\r\n\r\n              <Container\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"flex-start\"\r\n                margin=\"36px\"\r\n                backgroundColor=\"transparent\"\r\n                padding=\"0px\"\r\n                alignitems=\"center\"\r\n                gap=\"30px\"\r\n              >\r\n                {items.map(item => (\r\n                  <CardsCommand\r\n                    name={item.name}\r\n                    price={item.price}\r\n                    desc={item.desc}\r\n                  />\r\n                ))}\r\n              </Container>\r\n            </div>\r\n          </TableWithTabs>\r\n        </Body>\r\n      </Container>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Comandas;\r\n\r\n\r\n\r\n\r\n","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Login\\styles.ts",["79"],"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\services\\api.ts",[],["80","81"],"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Cardapio\\style.ts",[],"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Cadastro\\Cadastro.tsx",[],"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\App.tsx",[],"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Inicio\\Inicio.tsx",["82","83","84","85"],"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Usuarios\\Usuarios.tsx",["86","87","88","89"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Aside from '../../components/Aside/Aside'\r\nimport SubAside from '../../components/SubAside/SubAside'\r\nimport Container from '../../components/Container/Container'\r\nimport { Grid } from '../../components/Grid/style'\r\n\r\n\r\nfunction Usuarios() {\r\n    return (\r\n        <Grid>\r\n            <Aside />\r\n            {/* <SubAside title=\"Usuarios\" /> */}\r\n            <Container>\r\n                <Grid grid=\"auto/ 1.5fr 2fr 2fr 2fr 1.5fr\" gridGap=\"2.5% 2.5%\" rowGap=\"2.5%\" marginTop=\"2%\">\r\n\r\n                </Grid>\r\n                <Grid grid=\"auto/ 1.5fr 2fr 2fr 2fr 1.5fr\" gridGap=\"2.5%\" rowGap=\"10px\">\r\n\r\n                </Grid>\r\n            </Container>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Usuarios;\r\n\r\n\r\n","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\components\\SubAside\\style.ts",["90","91"],"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\components\\Text\\text.ts",[],"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\components\\Button\\Button.tsx",[],"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\utils\\dimensions.ts",[],"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\components\\Container\\style.ts",["92","93"],"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\components\\Button\\style.ts",[],"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\components\\Loader\\style.ts",[],"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Cardapio\\Cardapio.tsx",["94","95","96","97","98","99","100","101","102"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Aside from \"../../components/Aside/Aside\";\r\nimport SubAside from \"../../components/SubAside/SubAside\";\r\nimport Cards from \"../../components/Cards/Cards\";\r\nimport Container from \"../../components/Container/Container\";\r\nimport { Grid } from \"../../components/Grid/style\";\r\nimport Modal from \"../../components/Modal/Modal\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Logo from \"../../public/icons/logo-bk-white.svg\";\r\nimport Food from \"../../public/icons/fast-food-outline.svg\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\r\nimport api from \"../../services/api\";\r\nimport { ChangeEventHandler } from \"react\";\r\nimport { Input } from \"components/Input/Input\";\r\nimport { DragFileArea } from \"./style\";\r\nimport { Add } from \"react-ionicons\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport Loader from \"components/Loader\";\r\n\r\nimport { LiMenu } from \"../../components/SubAside/style\";\r\nimport { TrashOutline, CreateOutline } from \"react-ionicons\";\r\n\r\ninterface ICategory {\r\n  name: string;\r\n  id: number;\r\n  items: IItem[];\r\n}\r\n\r\ninterface IItem {\r\n  name: string;\r\n  id: number;\r\n  desc: string;\r\n  imageurl: string;\r\n  avaible: boolean;\r\n  price: number;\r\n}\r\n\r\ninterface IShowModal {\r\n  isActive: boolean;\r\n  id: number;\r\n}\r\n\r\nfunction Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction Item() {\r\n  const history = useHistory();\r\n\r\n  const [showLoader, setShowLoader] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [nameItem, setNameItem] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [categories, setCategories] = useState<ICategory[]>([]);\r\n  const [items, setItems] = useState<IItem[]>([]);\r\n  const [refresh, setRefresh] = useState(0);\r\n  const [refreshEdit, setRefreshEdit] = useState(0);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showModalCreate, setShowModalCreate] = useState(false);\r\n  const [showModalEdit, setShowModalEdit] = useState<IShowModal>({id:0, isActive:false});\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openError, setOpenError] = React.useState(false);\r\n  const [step, setStep] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [filteredItems, setFilteredItems] = useState<IItem[]>([]);\r\n\r\n  const onSearch = (e: string) => {\r\n    const searchText = e.toLowerCase();\r\n    const newSearch = items.filter(({ name, desc }) =>\r\n      name?.toLowerCase().includes(searchText)\r\n    );\r\n    setFilteredItems(newSearch);\r\n    setSearch(e);\r\n    console.log(filteredItems);\r\n  };\r\n\r\n  const listItems = search === \"\" ? items : filteredItems;\r\n\r\n  const isUserAuthenticated = () =>\r\n    localStorage.getItem(\"TOKEN\") === null && history.push(\"/\");\r\n\r\n  const getTokenFromStorage = (): string =>\r\n    localStorage.getItem(\"TOKEN\") as string;\r\n\r\n  async function handleDelete(id: number) {\r\n    try {\r\n      await api.delete(\"/item/\" + id, {\r\n        headers: {\r\n          authorization: getTokenFromStorage(),\r\n        },\r\n      });\r\n      setRefresh((chave) => chave + 1);\r\n      console.log(id);\r\n    } catch (error) {\r\n      return alert(\"ocorreu algum erro\");\r\n    }\r\n\r\n    setOpen(true);\r\n  }\r\n\r\n  async function handleSubmit(event: ChangeEventHandler<HTMLInputElement>) {\r\n    if (name === \"\") {\r\n      return alert(\"Complete o campo corretamente!\");\r\n    } else {\r\n      setName('')\r\n      try {\r\n        await api.post(\r\n          \"category\",\r\n          { name },\r\n          {\r\n            headers: {\r\n              authorization: getTokenFromStorage(),\r\n            },\r\n          }\r\n        );\r\n\r\n        history.push(\"/cardapio\");\r\n\r\n        setRefresh((chave) => chave + 1);\r\n\r\n        setShowModal(false);\r\n      } catch (error) {\r\n        return alert(\"Erro ao tentar cadastrar Categoria\");\r\n      }\r\n    }\r\n  }\r\n\r\n  function closeModal() {\r\n    setShowModalCreate(false);\r\n    setStep(0);\r\n    setDescription(\"\");\r\n    setNameItem(\"\");\r\n    setPrice(\"\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    isUserAuthenticated();\r\n  }, []);\r\n\r\n  function GetApi() {\r\n    setShowLoader(true);\r\n    try {\r\n      api\r\n        .get<ICategory[]>(\"/category\", {\r\n          headers: {\r\n            authorization: getTokenFromStorage(),\r\n          },\r\n        })\r\n        .then((response) => {\r\n          setShowLoader(false);\r\n          setCategories(response.data);\r\n          console.log(response.data);\r\n        });\r\n    } catch (error) {\r\n      return alert(\"ocorreu algum erro\");\r\n    }\r\n  }\r\n\r\n  async function handleDeleteCategory(id: number) {\r\n    try {\r\n      await api.delete(\"category/\" + id, {\r\n        headers: {\r\n          authorization: getTokenFromStorage(),\r\n        },\r\n      });\r\n      setRefresh((chave) => chave + 1);\r\n      console.log(id);\r\n    } catch (error) {\r\n      return alert(\"ocorreu algum erro\");\r\n    }\r\n    setOpen(true);\r\n  }\r\n\r\n  async function handleEditCategory(category: ICategory) {\r\n    try {\r\n      await api.get(\"category/\" + category.id, {\r\n        headers: {\r\n          authorization: getTokenFromStorage(),\r\n        },\r\n      });\r\n    } catch (error) {\r\n      return alert(\"ocorreu algum erro\");\r\n    }\r\n    console.log(category.id);\r\n\r\n    console.log(category.name);\r\n\r\n    setName(category.name);\r\n\r\n    setShowModalEdit({id: category.id, isActive: true});\r\n  }\r\n\r\n\r\n  async function handleSubmitEdit(category: ICategory, id: number) {\r\n    if (name === \"\") {\r\n      return alert(\"Complete o campo corretamente!\");\r\n    } else {\r\n      try {\r\n        console.log('id: ',id);\r\n        await api.put(\r\n          \"category/\" + id,\r\n          { name },\r\n          {\r\n            headers: {\r\n              authorization: getTokenFromStorage(),\r\n            },\r\n          }\r\n        );\r\n\r\n        history.push(\"/cardapio\");\r\n\r\n        setRefresh((chave) => chave + 1);\r\n\r\n        setShowModalEdit({id: category.id, isActive: false});\r\n      } catch (error) {\r\n        return alert(\"Erro ao tentar cadastrar Categoria\");\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    GetApi();\r\n    setName(\"\");\r\n  }, [refresh]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Aside />\r\n      <SubAside\r\n        title=\"Categorias\"\r\n        clicked={() => setShowModal(true)}\r\n        addButtonText=\"+ Adicionar nova categoria\"\r\n        items={categories}\r\n      >\r\n        {categories.map(category => (\r\n          <div key={category.id}>\r\n            <LiMenu>\r\n              <TrashOutline\r\n                color=\"white\"\r\n                width=\"3rem\"\r\n                height=\"1.5rem\"\r\n                onClick={() => handleDeleteCategory(category.id)}\r\n              />\r\n              <CreateOutline\r\n                color=\"white\"\r\n                width=\"3rem\"\r\n                height=\"1.5rem\"\r\n                onClick={() => handleEditCategory(category)}\r\n              />\r\n              {category.name}\r\n            </LiMenu>\r\n            {showModalEdit.isActive && (\r\n              <Modal\r\n                title={`Vamos editar a Categoria ${category.name}`}\r\n                ButtonTitle=\"Adicionar\"\r\n                text=\"Por favor, preencha os campos abaixo, para prosseguirmos no processo de cadastro.\"\r\n                change={(event) => setName(event.target.value)}\r\n                closeClicked={() => setShowModalEdit({id:category.id, isActive:false})}\r\n              >\r\n                <Input\r\n                  width=\"55%\"\r\n                  marginTop=\"20px\"\r\n                  placeholder=\"Digite o nome da categoria\"\r\n                  value={name}\r\n                  onChange={(event) => setName(event.target.value)}\r\n                />\r\n                <Button\r\n                  content=\"Editar Categoria\"\r\n                  width=\"25%\"\r\n                  height=\"2.25rem\"\r\n                  marginTop=\"28px\"\r\n                  clicked={() => handleSubmitEdit(category, showModalEdit.id)}\r\n                />\r\n              </Modal>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </SubAside>\r\n      <Container height=\"100%\" padding=\"0px 0px 0px 0px\" flexDirection=\"column\">\r\n        <Header\r\n          title=\"Todos os seus pratos\"\r\n          subtitle=\"Categoria:\"\r\n          addButton=\"Adicionar novo prato\"\r\n          src={Food}\r\n          logo={Logo}\r\n          placeholder=\"Digite o nome de um item\"\r\n          clickedAdd={() => setShowModalCreate(true)}\r\n          onChange={(e) => {\r\n            onSearch(e.target.value);\r\n          }}\r\n        />\r\n        <Container display=\"inline-flex\" justifyContent=\"flex-start\">\r\n          {listItems.map((item) => (\r\n            <Cards\r\n              name={item.name}\r\n              desc={item.desc}\r\n              price={Intl.NumberFormat(\"pt-BR\", {\r\n                style: \"currency\",\r\n                currency: \"BRL\",\r\n              }).format(item.price)}\r\n              src={item.imageurl}\r\n              TrashClicked={() => handleDelete(item.id)}\r\n            />\r\n          ))}\r\n        </Container>\r\n      </Container>\r\n      {showModal && (\r\n        <Modal\r\n          title=\"Vamos adicionar uma nova categoria!\"\r\n          ButtonTitle=\"Adicionar\"\r\n          text=\"Por favor, preencha os campos abaixo, para prosseguirmos no processo de cadastro.\"\r\n          change={(event) => setName(event.target.value)}\r\n          closeClicked={() => setShowModal(false)}\r\n        >\r\n          <Input\r\n            width=\"55%\"\r\n            marginTop=\"20px\"\r\n            placeholder=\"Digite o nome da categoria\"\r\n            value={name}\r\n            onChange={(event) => setName(event.target.value)}\r\n          />\r\n          <Button\r\n            content=\"Adicionar Categoria\"\r\n            width=\"25%\"\r\n            height=\"2.25rem\"\r\n            marginTop=\"28px\"\r\n            clicked={handleSubmit}\r\n          />\r\n        </Modal>\r\n      )}\r\n\r\n      {showLoader && <Loader />}\r\n\r\n      {showModalCreate && (\r\n        <Modal\r\n          title=\"Vamos adicionar um novo item!\"\r\n          ButtonTitle=\"Adicionar\"\r\n          text={\r\n            step === 0\r\n              ? \"Por favor, preencha os campos abaixo, para prosseguirmos no processo de cadastro.\"\r\n              : \"Adicione uma foto para o item\"\r\n          }\r\n          change={(event) => setName(event.target.value)}\r\n          closeClicked={closeModal}\r\n        >\r\n          {step === 0 && (\r\n            <>\r\n              <Input\r\n                width=\"55%\"\r\n                marginTop=\"20px\"\r\n                placeholder=\"Digite o nome do item\"\r\n                value={nameItem}\r\n                onChange={(event) => setNameItem(event.target.value)}\r\n              />\r\n              <Input\r\n                width=\"55%\"\r\n                marginTop=\"20px\"\r\n                placeholder=\"Digite sobre o item\"\r\n                value={description}\r\n                onChange={(event) => setDescription(event.target.value)}\r\n              />\r\n              <Input\r\n                width=\"55%\"\r\n                marginTop=\"20px\"\r\n                placeholder=\"Digite o preço do item\"\r\n                value={price}\r\n                onChange={(event) => setPrice(event.target.value)}\r\n              />\r\n              <Button\r\n                content=\"Avançar\"\r\n                width=\"25%\"\r\n                height=\"2.25rem\"\r\n                marginTop=\"28px\"\r\n                clicked={() => setStep(step + 1)}\r\n              />\r\n            </>\r\n          )}\r\n          {step === 1 && (\r\n            <>\r\n              <Dropzone>\r\n                {({ getRootProps, getInputProps }) => (\r\n                  <div {...getRootProps()}>\r\n                    <DragFileArea\r\n                      margin=\"24px 0 0 0\"\r\n                      justifyContent=\"center\"\r\n                      alignItems=\"center\"\r\n                    >\r\n                      <Add color=\"#7A7A7A\" width=\"36px\" height=\"36px\" />\r\n                      <input {...getInputProps()} />\r\n                    </DragFileArea>\r\n                  </div>\r\n                )}\r\n              </Dropzone>\r\n\r\n              <Button\r\n                content=\"Adicionar Categoria\"\r\n                width=\"25%\"\r\n                height=\"2.25rem\"\r\n                marginTop=\"28px\"\r\n                clicked={handleSubmit}\r\n              />\r\n            </>\r\n          )}\r\n        </Modal>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n\r\n// {showModal === true &&\r\n//     <Modal\r\n//         title=\"Adicionar Categoria\"\r\n//         ButtonTitle=\"Adicionar\"\r\n//         text=\"Digite o nome da categoria que deseja adicionar no campo abaixo.\"\r\n//         clicked={handleSubmit}\r\n//         value={name}\r\n//         change={event => setName(event.target.value)}\r\n//         Backclicked={() => setShowModal(false)}\r\n//     />}\r\n// <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n//     <Alert onClose={handleClose} severity=\"success\">\r\n//         Cadastro realizado com sucesso!\r\n//     </Alert>\r\n// </Snackbar>\r\n// <Snackbar open={openError} autoHideDuration={6000} onClose={handleClose}>\r\n//     <Alert onClose={handleClose} severity=\"error\">\r\n//         Ocorreu um erro! Cadastro não realizado\r\n//     </Alert>\r\n// </Snackbar>\r\n",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":13,"column":31,"nodeType":"109","messageId":"110","endLine":13,"endColumn":44},{"ruleId":"107","severity":1,"message":"111","line":35,"column":10,"nodeType":"109","messageId":"110","endLine":35,"endColumn":20},{"ruleId":"107","severity":1,"message":"112","line":6,"column":10,"nodeType":"109","messageId":"110","endLine":6,"endColumn":20},{"ruleId":"103","replacedBy":"113"},{"ruleId":"105","replacedBy":"114"},{"ruleId":"107","severity":1,"message":"115","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"116","line":1,"column":28,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"117","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":20},{"ruleId":"107","severity":1,"message":"118","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":16},{"ruleId":"107","severity":1,"message":"115","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"116","line":1,"column":28,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"117","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":20},{"ruleId":"107","severity":1,"message":"118","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":16},{"ruleId":"107","severity":1,"message":"119","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":14},{"ruleId":"107","severity":1,"message":"120","line":51,"column":11,"nodeType":"109","messageId":"110","endLine":51,"endColumn":20},{"ruleId":"107","severity":1,"message":"112","line":3,"column":18,"nodeType":"109","messageId":"110","endLine":3,"endColumn":28},{"ruleId":"107","severity":1,"message":"121","line":3,"column":30,"nodeType":"109","messageId":"110","endLine":3,"endColumn":40},{"ruleId":"107","severity":1,"message":"122","line":45,"column":10,"nodeType":"109","messageId":"110","endLine":45,"endColumn":15},{"ruleId":"107","severity":1,"message":"123","line":58,"column":17,"nodeType":"109","messageId":"110","endLine":58,"endColumn":25},{"ruleId":"107","severity":1,"message":"124","line":60,"column":10,"nodeType":"109","messageId":"110","endLine":60,"endColumn":21},{"ruleId":"107","severity":1,"message":"125","line":60,"column":23,"nodeType":"109","messageId":"110","endLine":60,"endColumn":37},{"ruleId":"107","severity":1,"message":"126","line":64,"column":10,"nodeType":"109","messageId":"110","endLine":64,"endColumn":14},{"ruleId":"107","severity":1,"message":"127","line":65,"column":10,"nodeType":"109","messageId":"110","endLine":65,"endColumn":19},{"ruleId":"107","severity":1,"message":"128","line":65,"column":21,"nodeType":"109","messageId":"110","endLine":65,"endColumn":33},{"ruleId":"129","severity":1,"message":"130","line":141,"column":6,"nodeType":"131","endLine":141,"endColumn":8,"suggestions":"132"},{"ruleId":"129","severity":1,"message":"133","line":227,"column":6,"nodeType":"131","endLine":227,"endColumn":15,"suggestions":"134"},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"@typescript-eslint/no-unused-vars","'TabsContainer' is defined but never used.","Identifier","unusedVar","'countItems' is assigned a value but never used.","'dimensions' is defined but never used.",["135"],["136"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","'SubAside' is defined but never used.","'Link' is defined but never used.","'LinkProps' is defined but never used.","'fontsSizes' is defined but never used.","'Alert' is defined but never used.","'setItems' is assigned a value but never used.","'refreshEdit' is assigned a value but never used.","'setRefreshEdit' is assigned a value but never used.","'open' is assigned a value but never used.","'openError' is assigned a value but never used.","'setOpenError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isUserAuthenticated'. Either include it or remove the dependency array.","ArrayExpression",["137"],"React Hook useEffect has a missing dependency: 'GetApi'. Either include it or remove the dependency array.",["138"],"no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [isUserAuthenticated]",{"range":"143","text":"144"},"Update the dependencies array to be: [GetApi, refresh]",{"range":"145","text":"146"},[4250,4252],"[isUserAuthenticated]",[6254,6263],"[GetApi, refresh]"]