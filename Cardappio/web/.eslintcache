[{"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\App.tsx":"1","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Pedidos\\Pedidos.tsx":"2","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Comandas\\Comandas.tsx":"3","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\AddItem\\AddItem.tsx":"4","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\utils\\fontSizes.ts":"5","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Item\\Item.tsx":"6","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\index.tsx":"7","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\AddCozinha\\AddCozinha.tsx":"8","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Usuarios\\Usuarios.tsx":"9","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\AddGarcom\\AddGarcom.tsx":"10","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Login\\styles.ts":"11","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\services\\api.ts":"12","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\utils\\colors.ts":"13","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Inicio\\Inicio.tsx":"14"},{"size":168,"mtime":1615489440453,"results":"15","hashOfConfig":"16"},{"size":839,"mtime":1615603630051,"results":"17","hashOfConfig":"16"},{"size":848,"mtime":1615603630047,"results":"18","hashOfConfig":"16"},{"size":4859,"mtime":1616031538933,"results":"19","hashOfConfig":"16"},{"size":445,"mtime":1615489440478,"results":"20","hashOfConfig":"16"},{"size":7847,"mtime":1616559281267,"results":"21","hashOfConfig":"16"},{"size":211,"mtime":1615489440464,"results":"22","hashOfConfig":"16"},{"size":1218,"mtime":1615489440466,"results":"23","hashOfConfig":"16"},{"size":844,"mtime":1615603630051,"results":"24","hashOfConfig":"16"},{"size":1834,"mtime":1615489440468,"results":"25","hashOfConfig":"16"},{"size":1307,"mtime":1616559281269,"results":"26","hashOfConfig":"16"},{"size":125,"mtime":1617070388689,"results":"27","hashOfConfig":"16"},{"size":441,"mtime":1616559281273,"results":"28","hashOfConfig":"16"},{"size":832,"mtime":1615603630048,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qslc7i",{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\App.tsx",[],"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Pedidos\\Pedidos.tsx",["66","67","68"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport NewAside from '../../components/NewAside/NewAside'\r\nimport SubAside from '../../components/SubAside/SubAside'\r\nimport Container from '../../components/Container/Container'\r\nimport { Grid } from '../../components/Grid/style'\r\n\r\n\r\nfunction Pedidos() {\r\n    return (\r\n        <Grid>\r\n            <NewAside></NewAside>\r\n            <SubAside title=\"Pedidos\"></SubAside>\r\n            <Container>\r\n                <Grid grid=\"auto/ 1.5fr 2fr 2fr 2fr 1.5fr\" gridGap=\"2.5% 2.5%\" rowGap=\"2.5%\" marginTop=\"2%\">\r\n\r\n                </Grid>\r\n                <Grid grid=\"auto/ 1.5fr 2fr 2fr 2fr 1.5fr\" gridGap=\"2.5%\" rowGap=\"10px\">\r\n\r\n                </Grid>\r\n            </Container>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Pedidos;\r\n\r\n",["69","70"],"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Comandas\\Comandas.tsx",["71","72","73"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport NewAside from '../../components/NewAside/NewAside'\r\nimport SubAside from '../../components/SubAside/SubAside'\r\nimport Container from '../../components/Container/Container'\r\nimport { Grid } from '../../components/Grid/style'\r\n\r\n\r\nfunction Comandas() {\r\n    return (\r\n        <Grid>\r\n            <NewAside></NewAside>\r\n            <SubAside title=\"Comandas\"></SubAside>\r\n            <Container>\r\n                <Grid grid=\"auto/ 1.5fr 2fr 2fr 2fr 1.5fr\" gridGap=\"2.5% 2.5%\" rowGap=\"2.5%\" marginTop=\"2%\">\r\n\r\n                </Grid>\r\n                <Grid grid=\"auto/ 1.5fr 2fr 2fr 2fr 1.5fr\" gridGap=\"2.5%\" rowGap=\"10px\">\r\n\r\n                </Grid>\r\n            </Container>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Comandas;\r\n\r\n\r\n\r\n\r\n","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\AddItem\\AddItem.tsx",["74","75","76","77","78","79","80","81","82","83"],"import React, { FormEvent, useState, ChangeEvent } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport NewAside from '../../components/NewAside/NewAside';\r\nimport SubAside from '../../components/SubAside/SubAside';\r\nimport Button from '../../components/Button/Button';\r\nimport { Grid } from '../../components/Grid/style';\r\nimport { Input } from 'components/Input/Input';\r\nimport Container from 'components/Container/Container';\r\nimport { Form } from 'components/Form/Form';\r\nimport { P, Title} from 'components/Text/text';\r\n\r\n\r\nfunction AddItem() {\r\n\r\n    const history = useHistory();\r\n\r\n    const [name, setName] = useState('');\r\n    const [desc, setDesc] = useState('');\r\n    const [avaible, setAvaible] = useState(false);\r\n    const [price, setPrice] = useState('');\r\n    const [images, setImages] = useState<File[]>([])\r\n    const [previewImages, setPreviewImages] = useState<string[]>([])\r\n\r\n    function handleSelectedImages(event: ChangeEvent<HTMLInputElement>) {\r\n        if (!event.target.files) {\r\n            return;\r\n        }\r\n\r\n        const selectedImages = Array.from(event.target.files);\r\n        setImages(selectedImages)\r\n\r\n        const selectedImagesPreview = selectedImages.map(image => {\r\n            return URL.createObjectURL(image)\r\n        })\r\n\r\n        setPreviewImages(selectedImagesPreview);\r\n    }\r\n\r\n\r\n\r\n    async function handleSubmit(event: FormEvent) {\r\n        event.preventDefault();\r\n\r\n        const data = new FormData();\r\n\r\n        data.append('name', name);\r\n        data.append('desc', desc);\r\n        data.append('avaible', String(avaible));\r\n        data.append('price', price);\r\n        images.forEach(image => {\r\n            data.append('images', image)\r\n        })\r\n\r\n        await api.post('category', { data });\r\n\r\n        alert('Cadastro realizado com sucesso!');\r\n        history.push('/item');\r\n\r\n        console.log(data);\r\n\r\n        console.log({\r\n            name,\r\n            desc,\r\n            avaible,\r\n            price,\r\n            images\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div id=\"page-AddItem\">\r\n            <Grid >\r\n                <NewAside />\r\n                <SubAside title=\"Categorias\" />\r\n                <Container display=\"flex\" justifyContent=\"initial\" padding=\"0px 64px 64px 64px\">\r\n                    <Container\r\n                        width=\"100%\"\r\n                        height=\"200px\"\r\n                        padding=\"0px\"\r\n                        display=\"inline-flex\"\r\n                        flexDirection=\"row\"\r\n                        justifyContent=\"left\"\r\n                    >\r\n                        <Title marginTop=\"64px\">Adicionar Item</Title>\r\n                    </Container>\r\n                    <Form>\r\n\r\n                    </Form>\r\n                </Container>\r\n            </Grid>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default AddItem;\r\n\r\n\r\n/* <form onSubmit={handleSubmit}>\r\n<Grid container spacing={3}>\r\n    <Grid item xs={12}>\r\n        <h1> Cadastrar Item </h1>\r\n    </Grid>\r\n\r\n    <Grid item xs={12}>\r\n        <hr/>\r\n    </Grid>\r\n\r\n    <Grid item xs={12}>\r\n        <label htmlFor=\"name\">Nome do Item:</label>\r\n        <input  placeholder=\"Ex: X-Salada\" value={name} onChange={event => setName(event.target.value)} />\r\n    </Grid>\r\n\r\n    <Grid item xs={12}>\r\n        <label htmlFor=\"description\">Descrição do item:</label>\r\n        <input  placeholder=\"Ex: Pão, Hamburguer, alface e maionese\" value={desc} onChange={event => setDesc(event.target.value)}/>\r\n    </Grid>\r\n\r\n    <Grid item xs={12}>\r\n        <label htmlFor=\"Image\">Imagem do item:</label>\r\n        <div className=\"images-container\">\r\n            {\r\n                previewImages.map(image=>{\r\n                    return (\r\n                        <img src={image} alt={image} key={image}/>\r\n                    )\r\n                })\r\n            }\r\n\r\n<label htmlFor=\"image\" className=\"new-image\">\r\n  <FiPlus size={24} color=\"grey\" />\r\n</label>\r\n\r\n\r\n</div>\r\n<input multiple onChange={handleSelectedImages} type=\"file\" id=\"image\"/>\r\n\r\n    </Grid>\r\n\r\n    <Grid item xs={12}>\r\n        <label htmlFor=\"Price\">Preço:</label>\r\n        <input  placeholder=\"Ex: 15,90\" value={price} onChange={event => setPrice(event.target.value)}/>\r\n    </Grid>\r\n\r\n    <Grid item xs={12}>\r\n        <label htmlFor=\"Avaible\">Disponível:</label>\r\n        <div className=\"button-select\">\r\n            <button type=\"button\"\r\n                className={avaible ? 'active' : ''}\r\n                onClick={() => setAvaible(true)}\r\n            >Sim</button>\r\n            <button type=\"button\"\r\n                className={!avaible ? 'active' : ''}\r\n                onClick={() => setAvaible(false)}\r\n            >Não</button>\r\n        </div>\r\n    </Grid>\r\n\r\n    <Grid item xs={12}>\r\n        <Button ></Button>\r\n    </Grid>\r\n\r\n</Grid>\r\n</form> */",["84","85"],"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\utils\\fontSizes.ts",[],"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Item\\Item.tsx",["86","87","88","89","90","91","92","93","94","95","96","97"],"import React, { FormEvent, useEffect, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport jwt from 'jsonwebtoken'\r\nimport NewAside from '../../components/NewAside/NewAside'\r\nimport SubAside from '../../components/SubAside/SubAside'\r\nimport Cards from '../../components/Cards/Cards'\r\nimport Container from '../../components/Container/Container'\r\nimport { Grid } from '../../components/Grid/style'\r\nimport Modal from '../../components/Modal/Modal'\r\nimport Header from '../../components/Header/Header'\r\n\r\nimport Logo from '../../public/icons/logo-bk-white.svg'\r\nimport Food from '../../public/icons/fast-food-outline.svg'\r\nimport EditSVG from '../../public/icons/create-outline.svg'\r\nimport TrashSVG from '../../public/icons/trash-outline.svg'\r\nimport Svg from '../../components/Svg/Svg'\r\n\r\nimport { Title, P } from '../../components/Text/text'\r\nimport Button from '../../components/Button/Button'\r\nimport { LiMenu, AddButton } from '../../components/SubAside/style'\r\n\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\n\r\n\r\nimport api from '../../services/api'\r\nimport { ChangeEventHandler } from 'react';\r\nimport { Input } from 'components/Input/Input';\r\nimport { colors } from 'utils';\r\n\r\ninterface ICategory {\r\n    name: string,\r\n    id: number\r\n}\r\n\r\ninterface IItem {\r\n    name: string,\r\n    id: number\r\n    desc: string\r\n    imageurl: string\r\n    avaible: boolean\r\n    price: number\r\n}\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction Item() {\r\n    const history = useHistory();\r\n\r\n    const location = useLocation();\r\n\r\n    const [name, setName] = useState('');\r\n    const [categories, setCategories] = useState<ICategory[]>([]);\r\n    const [items, setItems] = useState<IItem[]>([]);\r\n    const [refresh, setRefresh] = useState(0);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openError, setOpenError] = React.useState(false);\r\n\r\n\r\n    const isUserAuthenticated = () =>\r\n        localStorage.getItem('TOKEN') === null && history.push('/')\r\n\r\n    const getTokenFromStorage = (): string =>\r\n        JSON.parse(localStorage.getItem('TOKEN') as string).authorization\r\n\r\n    async function handleDelete(id: number) {\r\n        try{\r\n            await api.delete('/item/' + id, {headers: {\r\n                'authorization': getTokenFromStorage()\r\n            }})\r\n            setRefresh(chave => chave + 1)\r\n            console.log(id);\r\n        }\r\n       catch(error){\r\n           return alert('ocorreu algum erro')\r\n       }\r\n\r\n        setOpen(true)\r\n    }\r\n\r\n\r\n    async function handleSubmit(event: ChangeEventHandler<HTMLInputElement>) {\r\n        if (name === '') {\r\n            return alert('Complete o campo corretamente!');\r\n        }\r\n        else {\r\n            try{\r\n                const data = new FormData();\r\n\r\n                data.append('name', name);\r\n    \r\n                await api.post('category', { name }, {headers: {\r\n                    'authorization': getTokenFromStorage()\r\n                }});\r\n\r\n                history.push('/item');\r\n\r\n                setRefresh(chave => chave + 1);\r\n\r\n                window.location.reload();\r\n\r\n                setShowModal(false);\r\n    \r\n            }\r\n            catch(error){\r\n              return alert('Erro ao tentar cadastrar Categoria');\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        isUserAuthenticated()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        function GetApi() {\r\n            api.get<ICategory[]>('/category', {\r\n                headers: {\r\n                    'authorization': getTokenFromStorage()\r\n                }\r\n            }).then(response => {\r\n                setCategories(response.data)\r\n                console.log(response.data);\r\n            })\r\n            api.get<IItem[]>('/item').then(response => {\r\n                setItems(response.data)\r\n                console.log(response.data)\r\n            })\r\n        }\r\n        GetApi();\r\n    }, [refresh])\r\n\r\n    return (\r\n        <Grid>\r\n            <NewAside></NewAside>\r\n            <SubAside title=\"Categorias\" clicked={() => setShowModal(true)}>\r\n                {location.pathname === '/item' ?\r\n                    categories.map(category =>\r\n                        <> <LiMenu>\r\n                            <Svg src={TrashSVG} width=\"3rem\" height=\"1.5rem\" onClick={() => handleDelete(category.id)} />\r\n                            <Link to=\"/\" style={{ color: 'inherit', textDecoration: 'inherit' }}>\r\n                                <Svg src={EditSVG} width=\"3rem\" height=\"1.5rem\" />\r\n                            </Link>\r\n                            {category.name}\r\n                        </LiMenu></>\r\n                    ) : null\r\n                }\r\n            </SubAside>\r\n\r\n            <Container height=\"100%\" padding=\"0px 0px 0px 0px\" flexDirection=\"column\">\r\n                <Header\r\n                    title=\"Todos os seus pratos\"\r\n                    subtitle=\"Categoria:\"\r\n                    addButton=\"Adicionar novo prato\"\r\n                    src={Food}\r\n                    logo={Logo}\r\n                    placeholder=\"Digite o nome de um item\"\r\n                    />\r\n                <Container display=\"inline-flex\" justifyContent=\"flex-start\">\r\n                    {items.map(item =>\r\n                        <Cards\r\n                            name={item.name}\r\n                            desc={item.desc}\r\n                            price={Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(item.price)}\r\n                            src={item.imageurl}\r\n                            TrashClicked={() => handleDelete(item.id)}\r\n                        ></Cards>\r\n                    )}\r\n                </Container>\r\n            </Container>\r\n            {showModal === true &&\r\n                <Modal\r\n                    title=\"Vamos adicionar uma nova categoria!\"\r\n                    ButtonTitle=\"Adicionar\"\r\n                    text=\"Por favor, preencha os campos abaixo, para prosseguirmos no processo de cadastro.\"\r\n                    change={event => setName(event.target.value)}\r\n                    closeClicked={() => setShowModal(false)}\r\n                >\r\n                   <Input \r\n                    width=\"55%\"\r\n                    marginTop=\"20px\"\r\n                    placeholder=\"Digite o nome da categoria\"\r\n                    value={name}\r\n                    onChange={event => setName(event.target.value)}\r\n                   />\r\n                   <Button \r\n                    content=\"Adicionar Categoria\"\r\n                    width=\"25%\"\r\n                    height=\"2.25rem\"\r\n                    marginTop=\"28px\"\r\n                    clicked={handleSubmit}\r\n                    />\r\n                </Modal>\r\n            }\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Item;\r\n\r\n// {showModal === true &&\r\n//     <Modal\r\n//         title=\"Adicionar Categoria\"\r\n//         ButtonTitle=\"Adicionar\"\r\n//         text=\"Digite o nome da categoria que deseja adicionar no campo abaixo.\"\r\n//         clicked={handleSubmit}\r\n//         value={name}\r\n//         change={event => setName(event.target.value)}\r\n//         Backclicked={() => setShowModal(false)}\r\n//     />}\r\n// <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n//     <Alert onClose={handleClose} severity=\"success\">\r\n//         Cadastro realizado com sucesso!\r\n//     </Alert>\r\n// </Snackbar>\r\n// <Snackbar open={openError} autoHideDuration={6000} onClose={handleClose}>\r\n//     <Alert onClose={handleClose} severity=\"error\">\r\n//         Ocorreu um erro! Cadastro não realizado\r\n//     </Alert>\r\n// </Snackbar>\r\n\r\n\r\n","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\index.tsx",[],"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\AddCozinha\\AddCozinha.tsx",[],"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Usuarios\\Usuarios.tsx",["98","99","100"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport NewAside from '../../components/NewAside/NewAside'\r\nimport SubAside from '../../components/SubAside/SubAside'\r\nimport Container from '../../components/Container/Container'\r\nimport { Grid } from '../../components/Grid/style'\r\n\r\n\r\nfunction Usuarios() {\r\n    return (\r\n        <Grid>\r\n            <NewAside></NewAside>\r\n            <SubAside title=\"Usuarios\"></SubAside>\r\n            <Container>\r\n                <Grid grid=\"auto/ 1.5fr 2fr 2fr 2fr 1.5fr\" gridGap=\"2.5% 2.5%\" rowGap=\"2.5%\" marginTop=\"2%\">\r\n\r\n                </Grid>\r\n                <Grid grid=\"auto/ 1.5fr 2fr 2fr 2fr 1.5fr\" gridGap=\"2.5%\" rowGap=\"10px\">\r\n\r\n                </Grid>\r\n            </Container>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Usuarios;\r\n\r\n\r\n","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\AddGarcom\\AddGarcom.tsx",[],"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Login\\styles.ts",["101"],"import styled from 'styled-components';\r\n\r\nimport Fundo from '../../Images/VectorBackground.png';\r\n\r\nimport { colors }from '../../utils/colors';\r\nimport { dimensions }from '../../utils/dimensions';\r\n\r\ninterface IContainrLeft {\r\n    overflow?: string\r\n}\r\n\r\nconst Body = styled.div`\r\n    width: 100%;\r\n    height: 100vh;\r\n    display: inline-flex;\r\n`\r\n\r\nconst ContainerLeft = styled.div<IContainrLeft>`\r\n    width: 33%;\r\n    min-width: 400px;\r\n    height: 100vh;\r\n    background-color: ${colors.black};\r\n    padding: 64px;\r\n    overflow-y: ${props => props.overflow};\r\n    ::-webkit-scrollbar {\r\n    width: 0px;\r\n}\r\n`\r\n\r\nconst ContainerRight = styled.div`\r\n    width: 67%;\r\n    height: 100vh;\r\n    background-color: ${colors.lightBlack};\r\n    background-image: url(${Fundo});\r\n    @media screen and (min-width: 1281px){\r\n        background-repeat: no-repeat;\r\n        background-size: cover;\r\n    }\r\n`\r\n\r\nconst BtnDiv = styled.div`\r\n    width: 100%;\r\n    min-height: 50px;\r\n    height: 13%;\r\n    display: inline-flex;\r\n    justify-content: space-between;\r\n    @media screen and (min-width: 1480px){\r\n        height: 10%;\r\n    }\r\n`\r\n\r\nconst Linha = styled.hr`\r\n    width: 100%;\r\n    border: 1px solid ${colors.textBlack};\r\n    margin-top: 5%;\r\n`\r\n\r\nexport { Body, ContainerLeft, ContainerRight, BtnDiv, Linha }","C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\services\\api.ts",[],"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\utils\\colors.ts",[],"C:\\Cardappio\\Cardappio\\Cardappio\\web\\src\\pages\\Inicio\\Inicio.tsx",["102","103","104"],{"ruleId":"105","severity":1,"message":"106","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"109","line":1,"column":28,"nodeType":"107","messageId":"108","endLine":1,"endColumn":36},{"ruleId":"105","severity":1,"message":"110","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":20},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"109","line":1,"column":28,"nodeType":"107","messageId":"108","endLine":1,"endColumn":36},{"ruleId":"105","severity":1,"message":"110","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":20},{"ruleId":"105","severity":1,"message":"115","line":8,"column":8,"nodeType":"107","messageId":"108","endLine":8,"endColumn":14},{"ruleId":"105","severity":1,"message":"116","line":10,"column":10,"nodeType":"107","messageId":"108","endLine":10,"endColumn":15},{"ruleId":"105","severity":1,"message":"117","line":13,"column":10,"nodeType":"107","messageId":"108","endLine":13,"endColumn":11},{"ruleId":"105","severity":1,"message":"118","line":20,"column":18,"nodeType":"107","messageId":"108","endLine":20,"endColumn":25},{"ruleId":"105","severity":1,"message":"119","line":21,"column":18,"nodeType":"107","messageId":"108","endLine":21,"endColumn":25},{"ruleId":"105","severity":1,"message":"120","line":22,"column":21,"nodeType":"107","messageId":"108","endLine":22,"endColumn":31},{"ruleId":"105","severity":1,"message":"121","line":23,"column":19,"nodeType":"107","messageId":"108","endLine":23,"endColumn":27},{"ruleId":"105","severity":1,"message":"122","line":25,"column":12,"nodeType":"107","messageId":"108","endLine":25,"endColumn":25},{"ruleId":"105","severity":1,"message":"123","line":27,"column":14,"nodeType":"107","messageId":"108","endLine":27,"endColumn":34},{"ruleId":"105","severity":1,"message":"124","line":44,"column":20,"nodeType":"107","messageId":"108","endLine":44,"endColumn":32},{"ruleId":"111","replacedBy":"125"},{"ruleId":"113","replacedBy":"126"},{"ruleId":"105","severity":1,"message":"127","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"128","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":11},{"ruleId":"105","severity":1,"message":"129","line":18,"column":10,"nodeType":"107","messageId":"108","endLine":18,"endColumn":15},{"ruleId":"105","severity":1,"message":"117","line":18,"column":17,"nodeType":"107","messageId":"108","endLine":18,"endColumn":18},{"ruleId":"105","severity":1,"message":"130","line":20,"column":18,"nodeType":"107","messageId":"108","endLine":20,"endColumn":27},{"ruleId":"105","severity":1,"message":"131","line":24,"column":8,"nodeType":"107","messageId":"108","endLine":24,"endColumn":16},{"ruleId":"105","severity":1,"message":"132","line":31,"column":10,"nodeType":"107","messageId":"108","endLine":31,"endColumn":16},{"ruleId":"105","severity":1,"message":"133","line":47,"column":10,"nodeType":"107","messageId":"108","endLine":47,"endColumn":15},{"ruleId":"105","severity":1,"message":"134","line":61,"column":12,"nodeType":"107","messageId":"108","endLine":61,"endColumn":16},{"ruleId":"105","severity":1,"message":"135","line":62,"column":12,"nodeType":"107","messageId":"108","endLine":62,"endColumn":21},{"ruleId":"105","severity":1,"message":"136","line":62,"column":23,"nodeType":"107","messageId":"108","endLine":62,"endColumn":35},{"ruleId":"137","severity":1,"message":"138","line":119,"column":8,"nodeType":"139","endLine":119,"endColumn":10,"suggestions":"140"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"109","line":1,"column":28,"nodeType":"107","messageId":"108","endLine":1,"endColumn":36},{"ruleId":"105","severity":1,"message":"110","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":20},{"ruleId":"105","severity":1,"message":"141","line":6,"column":10,"nodeType":"107","messageId":"108","endLine":6,"endColumn":20},{"ruleId":"105","severity":1,"message":"106","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"109","line":1,"column":28,"nodeType":"107","messageId":"108","endLine":1,"endColumn":36},{"ruleId":"105","severity":1,"message":"110","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":20},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useHistory' is defined but never used.","no-native-reassign",["142"],"no-negated-in-lhs",["143"],"'Button' is defined but never used.","'Input' is defined but never used.","'P' is defined but never used.","'setName' is assigned a value but never used.","'setDesc' is assigned a value but never used.","'setAvaible' is assigned a value but never used.","'setPrice' is assigned a value but never used.","'previewImages' is assigned a value but never used.","'handleSelectedImages' is defined but never used.","'handleSubmit' is defined but never used.",["142"],["143"],"'FormEvent' is defined but never used.","'jwt' is defined but never used.","'Title' is defined but never used.","'AddButton' is defined but never used.","'Snackbar' is defined but never used.","'colors' is defined but never used.","'Alert' is defined but never used.","'open' is assigned a value but never used.","'openError' is assigned a value but never used.","'setOpenError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isUserAuthenticated'. Either include it or remove the dependency array.","ArrayExpression",["144"],"'dimensions' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},"Update the dependencies array to be: [isUserAuthenticated]",{"range":"147","text":"148"},[3608,3610],"[isUserAuthenticated]"]